/*-*- c++ -*-********************************************************
 * config.h.in: config.h template file for use with autoconf        *
 *                                                                  *
 * (C) 1998,1999 by Karsten Ballüder (Ballueder@usa.net)            *
 *                                                                  *
 * $Id$
 *******************************************************************/
/// @package M
/// @author Karsten Ballüder (Ballueder@usa.net)
/**@name config.h.in: Defines generated automatically from configure.in by autoheader.  */
//@{
#ifndef __cplusplus

/** Define to empty if the keyword does not work.  */
#undef const

/** Define as __inline if that's what the C compiler calls it.  */
#undef inline

#endif /* !C++ */

/** Define if build system supports precompiled headers */
#undef USE_PCH

/** Define if you need to in order for stat and other things to work.  */
#undef _POSIX_SOURCE

/** Define if you have the ANSI C header files.  */
#undef STDC_HEADERS

/** Define if you have the <compface.h> header file.  -- we always have it */
#define HAVE_COMPFACE_H 1

/** Define if you have strsep() function */
#undef HAVE_STRSEP

/** Do we have the pisock library and headers? */
#undef USE_PISOCK

/** Do we have a pisock library with setmaxspeed? */
#undef HAVE_PI_SETMAXSPEED

/** Do we have a pisock library with pi_accept_to? */
#undef HAVE_PI_ACCEPT_TO

/** Do we need to redefine logical operator names for c-client? */
#undef M_LOGICAL_OP_NAMES

/** Define if you use Python. */
#undef USE_PYTHON

/** Define if you have libswigpy */
#undef HAVE_SWIGLIB

/** Define if the C++ compiler supports prototypes (of course it
    does!) - required for Python.h */
#undef HAVE_PROTOTYPES

/* Define if your <unistd.h> contains bad prototypes for exec*()
   (as it does on SGI IRIX 4.x) */
#undef BAD_EXEC_PROTOTYPES

/* Define if your compiler supports variable length function prototypes
   (e.g. void fprintf(FILE *, char *, ...);) *and* <stdarg.h> */
#undef HAVE_STDARG_PROTOTYPES

/** Define if you want to use wxThreads. (experimental) */
#undef USE_THREADS

/** Define if you want to use Modules. */
#undef USE_MODULES

/** Define if you want to link Modules statically. */
#undef USE_MODULES_STATIC

/** Define this if you want to use RBL to lookup SPAM domains. */
#undef USE_RBL

/** Define this if you want to compile in SSL support. */
#undef USE_SSL

#ifdef USE_SSL		/* If SSL support is present, we compile with */
#define NO_DSA	1	/* the minimum options.  It doesn't matter as */
#define NO_IDEA	1	/* we load openssl later, but this makes it   */
#endif

/** Define this if you want debugging logic included. */
#undef DEBUG

/** Define this to use dmalloc debugging library */
#undef USE_DMALLOC

/** Define this to use built-in i18n support */
#undef USE_I18N

/** Define this to build M with dialup support */
#undef USE_DIALUP

/** This define contains the installation prefix where Mahogany
    is installed.
*/
#define M_PREFIX "/usr/local"

/** This define contains the full canonical string that specifies
    the machine/system/OS/compiler
*/
#define M_CANONICAL_HOST "illegal-illegal-illegal-illegal"

/** This define carries some information about the operating system
    and release for which M is compiled.
*/
#define M_OSINFO   _T("UnknownOS")

/** The top level source directory */
#undef M_TOP_SOURCEDIR

/** The top level build directory */
#undef M_TOP_BUILDDIR

//@}
